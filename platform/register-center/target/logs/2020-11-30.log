[00:00:00.870] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:00:00.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:00:00.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:00:03.591] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:00:03.591] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:03.592] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:03.592] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:00:03.592] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:00:05.973] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:00:05.973] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:05.973] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:05.973] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:00:05.973] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:00:09.254] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:00:09.254] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:09.254] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:09.254] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:00:09.254] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:00:21.309] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:00:21.309] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:21.309] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:21.309] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:00:21.309] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:00:21.923] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:00:21.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:21.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:21.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:00:21.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:00:26.100] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:00:26.100] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:26.100] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:26.100] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:00:26.100] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:00:30.432] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[00:00:30.432] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:00:30.875] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:00:30.875] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:00:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:00:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_6_
[00:00:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:00:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_6_
[00:00:33.601] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:00:33.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:33.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:33.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:00:33.602] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:00:35.983] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:00:35.983] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:35.983] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:35.983] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:00:35.983] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:00:39.259] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:00:39.259] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:39.260] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:39.260] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:00:39.260] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:00:51.316] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:00:51.316] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:51.316] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:51.316] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:00:51.316] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:00:51.929] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:00:51.929] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:51.929] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:51.929] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:00:51.929] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:00:56.108] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:00:56.108] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:56.108] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:56.108] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:00:56.108] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:01:00.879] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:01:00.879] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:01:00.879] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:01:03.609] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:01:03.609] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:03.609] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:03.610] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:01:03.610] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:01:05.993] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:01:05.993] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:05.993] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:05.993] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:01:05.994] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:01:09.267] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:01:09.267] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:09.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:09.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:01:09.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:01:21.326] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:01:21.326] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:21.326] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:21.326] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:01:21.326] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:01:21.941] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:01:21.941] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:21.941] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:21.941] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:01:21.941] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:01:26.115] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:01:26.115] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:26.115] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:26.115] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:01:26.115] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:01:30.439] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms
[00:01:30.439] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:01:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:01:30.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:01:30.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:01:33.618] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:01:33.618] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:33.618] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:33.618] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:01:33.619] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:01:36.003] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:01:36.003] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:36.003] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:36.003] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:01:36.003] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:01:39.273] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:01:39.274] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:39.274] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:39.274] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:01:39.274] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:01:51.331] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:01:51.331] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:51.331] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:51.331] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:01:51.331] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:01:51.953] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:01:51.953] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:51.953] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:51.954] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:01:51.954] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:01:56.122] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:01:56.122] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:56.122] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:56.122] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:01:56.122] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:02:00.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:02:00.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:02:00.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:02:03.627] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:02:03.628] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:03.628] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:03.628] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:02:03.628] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:02:06.011] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:02:06.011] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:06.011] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:06.011] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:02:06.011] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:02:09.281] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:02:09.281] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:09.281] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:09.281] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:02:09.281] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:02:21.339] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:02:21.339] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:21.339] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:21.339] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:02:21.339] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:02:21.964] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:02:21.964] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:21.964] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:21.964] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:02:21.964] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:02:26.128] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:02:26.128] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:26.128] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:26.128] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:02:26.128] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:02:29.992] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:02:29.992] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:02:30.008] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 11
[00:02:30.445] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 4ms
[00:02:30.445] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:02:30.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:02:30.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:02:30.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:02:33.632] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:02:33.632] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:33.632] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:33.632] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:02:33.632] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:02:36.017] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:02:36.017] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:36.017] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:36.017] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:02:36.017] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:02:39.286] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:02:39.286] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:39.286] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:39.286] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:02:39.286] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:02:51.344] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:02:52.020] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:52.020] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:52.020] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:02:52.020] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:02:52.021] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:02:52.021] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:52.021] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:52.021] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:02:52.021] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:02:56.134] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:02:56.134] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:56.134] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:56.134] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:02:56.134] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:03:00.898] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:03:00.898] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:03:00.898] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:03:03.643] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:03:03.643] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:03.643] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:03.643] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:03:03.643] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:03:06.027] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:03:06.027] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:06.027] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:06.027] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:03:06.027] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:03:09.292] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:03:09.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:09.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:09.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:03:09.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:03:22.024] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:03:22.024] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:22.024] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:22.024] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:03:22.024] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:03:22.030] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:03:22.030] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:22.030] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:22.030] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:03:22.030] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:03:26.141] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:03:26.141] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:26.141] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:26.141] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:03:26.141] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:03:30.451] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms
[00:03:30.451] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:03:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:03:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:03:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:03:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_6_
[00:03:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:03:30.905] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:30.905] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_6_
[00:03:33.654] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:03:33.654] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:33.654] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:33.654] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:03:33.654] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:03:36.035] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:03:36.035] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:36.035] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:36.035] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:03:36.035] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:03:39.300] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:03:39.300] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:39.300] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:39.300] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:03:39.300] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:03:52.030] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:03:52.031] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:52.031] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:52.031] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:03:52.031] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:03:52.037] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:03:52.038] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:52.038] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:52.038] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:03:52.038] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:03:56.149] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:03:56.149] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:56.149] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:56.149] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:03:56.149] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:04:00.909] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:04:00.909] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:04:00.909] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:04:03.664] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:04:03.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:03.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:03.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:04:03.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:04:06.042] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:04:06.042] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:06.042] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:06.042] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:04:06.042] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:04:09.306] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:04:09.306] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:09.306] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:09.306] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:04:09.306] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:04:22.036] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:04:22.036] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:22.036] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:22.036] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:04:22.036] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:04:22.047] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:04:22.047] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:22.047] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:22.047] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:04:22.047] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:04:26.156] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:04:26.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:26.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:26.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:04:26.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:04:30.455] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[00:04:30.455] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:04:30.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:04:30.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:04:30.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:04:33.669] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:04:33.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:33.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:33.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:04:33.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:04:36.050] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:04:36.050] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:36.050] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:36.050] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:04:36.050] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:04:39.314] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:04:39.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:39.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:39.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:04:39.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:04:52.043] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:04:52.043] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:52.043] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:52.043] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:04:52.043] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:04:52.056] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:04:52.056] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:52.057] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:52.057] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:04:52.057] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:04:56.163] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:04:56.163] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:56.163] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:56.163] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:04:56.163] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:05:00.914] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:05:00.914] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:05:00.914] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:05:03.676] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:05:03.677] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:03.677] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:03.677] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:05:03.677] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:05:06.059] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:05:06.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:06.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:06.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:05:06.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:05:09.321] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:05:09.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:09.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:09.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:05:09.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:05:22.050] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:05:22.050] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:22.050] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:22.051] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:05:22.051] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:05:22.066] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:05:22.066] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:22.066] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:22.066] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:05:22.066] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:05:26.170] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:05:26.170] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:26.170] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:26.170] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:05:26.170] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:05:30.457] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:05:30.457] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:05:30.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:05:30.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:05:30.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:05:33.686] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:05:33.686] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:33.686] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:33.686] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:05:33.686] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:05:36.070] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:05:36.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:36.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:36.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:05:36.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:05:39.324] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:05:39.324] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:39.324] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:39.324] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:05:39.324] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:05:52.054] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:05:52.054] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:52.054] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:52.054] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:05:52.055] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:05:52.078] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:05:52.078] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:52.078] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:52.078] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:05:52.078] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:05:56.175] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:05:56.175] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:56.176] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:56.176] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:05:56.176] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:06:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:06:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:06:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:06:03.696] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:06:03.696] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:03.696] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:03.696] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:06:03.696] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:06:06.075] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:06:06.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:06.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:06.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:06:06.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:06:09.331] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:06:09.331] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:09.331] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:09.331] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:06:09.331] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:06:22.059] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:06:22.059] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:22.059] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:22.059] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:06:22.059] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:06:22.085] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:06:22.085] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:22.085] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:22.085] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:06:22.085] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:06:26.175] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:06:26.175] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:26.175] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:26.175] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:06:26.175] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:06:30.459] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 12ms
[00:06:30.459] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:06:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:06:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:06:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:06:30.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_6_
[00:06:30.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:06:30.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:30.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_6_
[00:06:33.689] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:06:33.689] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:33.689] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:33.690] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:06:33.690] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:06:36.068] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:06:36.068] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:36.068] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:36.068] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:06:36.068] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:06:39.319] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:06:39.319] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:39.319] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:39.319] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:06:39.319] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:06:52.046] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:06:52.047] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:52.047] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:52.047] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:06:52.047] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:06:52.070] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:06:52.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:52.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:52.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:06:52.070] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:06:56.167] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:06:56.168] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:56.168] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:56.168] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:06:56.168] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:07:00.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:07:00.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:07:00.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:07:03.689] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:07:03.689] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:03.690] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:03.690] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:07:03.690] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:07:06.068] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:07:06.068] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:06.068] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:06.068] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:07:06.068] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:07:09.320] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:07:09.320] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:09.320] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:09.320] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:07:09.321] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:07:22.051] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:07:22.052] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:22.052] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:22.052] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:07:22.052] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:07:22.078] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:07:22.078] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:22.078] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:22.078] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:07:22.078] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:07:26.172] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:07:26.172] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:26.173] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:26.173] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:07:26.173] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:07:30.460] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 12ms
[00:07:30.460] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:07:30.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:07:30.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:07:30.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:07:33.698] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:07:33.698] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:33.698] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:33.698] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:07:33.698] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:07:36.071] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:07:36.072] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:36.072] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:36.072] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:07:36.072] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:07:39.326] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:07:39.326] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:39.326] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:39.326] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:07:39.326] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:07:52.057] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:07:52.057] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:52.057] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:52.057] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:07:52.057] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:07:52.087] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:07:52.087] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:52.087] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:52.087] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:07:52.087] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:07:56.178] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:07:56.179] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:56.179] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:56.179] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:07:56.179] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:08:00.930] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:08:00.930] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:08:00.930] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:08:03.708] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:08:03.708] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:03.708] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:03.708] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:08:03.708] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:08:06.081] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:08:06.081] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:06.081] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:06.081] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:08:06.081] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:08:09.332] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:08:09.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:09.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:09.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:08:09.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:08:22.063] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:08:22.064] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:22.064] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:22.064] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:08:22.064] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:08:22.096] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:08:22.096] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:22.096] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:22.096] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:08:22.096] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:08:26.186] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:08:26.186] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:26.186] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:26.186] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:08:26.186] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:08:30.465] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 4ms
[00:08:30.465] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:08:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:08:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:08:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:08:33.717] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:08:33.717] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:33.717] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:33.717] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:08:33.717] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:08:36.086] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:08:36.087] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:36.087] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:36.087] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:08:36.087] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:08:39.340] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:08:39.340] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:39.340] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:39.340] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:08:39.340] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:08:52.072] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:08:53.095] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:53.095] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:53.095] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:08:53.095] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:08:53.120] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:08:53.120] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:53.121] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:53.121] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:08:53.121] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:08:56.192] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:08:56.192] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:56.192] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:56.192] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:08:56.192] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:09:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:09:01.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:09:01.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:09:03.726] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:09:03.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:03.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:03.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:09:03.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:09:06.094] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:09:06.094] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:06.094] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:06.094] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:09:06.095] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:09:09.348] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:09:09.348] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:09.348] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:09.348] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:09:09.348] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:09:23.102] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:09:23.102] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:23.102] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:23.102] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:09:23.102] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:09:23.143] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:09:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:09:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:09:26.197] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:09:26.198] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:26.198] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:26.198] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:09:26.198] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:09:30.471] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 4ms
[00:09:30.471] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:09:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:09:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:09:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:09:30.938] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_6_
[00:09:30.938] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:09:30.938] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:30.938] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_6_
[00:09:33.732] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:09:33.732] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:33.732] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:33.732] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:09:33.732] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:09:36.102] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:09:36.102] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:36.102] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:36.102] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:09:36.102] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:09:39.352] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:09:39.352] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:39.352] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:39.352] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:09:39.352] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:09:53.109] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:09:53.110] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:53.110] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:53.110] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:09:53.110] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:09:53.149] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:09:53.149] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:53.149] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:53.149] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:09:53.149] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:09:56.205] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:09:56.205] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:56.205] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:56.205] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:09:56.205] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:10:00.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:10:00.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:10:00.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:10:03.740] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:10:03.740] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:03.740] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:03.740] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:10:03.740] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:10:06.111] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:10:06.111] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:06.111] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:06.111] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:10:06.111] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:10:09.359] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:10:09.359] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:09.360] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:09.360] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:10:09.360] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:10:23.115] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:10:23.115] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:23.116] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:23.116] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:10:23.116] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:10:23.156] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:10:23.156] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:23.156] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:23.156] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:10:23.156] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:10:26.213] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:10:26.213] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:26.213] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:26.213] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:10:26.213] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:10:30.477] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 4ms
[00:10:30.477] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:10:30.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:10:30.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:10:30.946] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:10:33.748] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:10:33.748] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:33.749] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:33.749] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:10:33.749] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:10:36.117] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:10:36.117] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:36.117] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:36.117] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:10:36.117] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:10:39.367] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:10:39.367] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:39.367] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:39.367] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:10:39.367] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:10:53.119] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:10:53.119] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:53.119] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:53.119] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:10:53.119] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:10:53.165] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:10:53.165] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:53.165] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:53.165] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:10:53.165] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:10:56.217] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:10:56.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:56.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:56.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:10:56.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:11:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:11:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:11:00.948] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:11:03.756] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:11:03.756] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:03.756] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:03.756] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:11:03.757] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:11:06.126] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:11:06.126] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:06.126] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:06.126] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:11:06.126] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:11:09.373] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:11:09.373] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:09.373] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:09.373] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:11:09.373] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:11:23.127] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:11:23.127] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:23.128] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:23.128] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:11:23.128] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:11:23.172] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:11:23.172] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:23.172] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:23.172] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:11:23.172] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:11:26.221] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:11:26.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:26.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:26.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:11:26.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:11:30.481] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[00:11:30.482] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:11:30.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:11:30.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:11:30.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:11:33.761] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:11:33.761] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:33.761] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:33.761] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:11:33.761] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:11:36.135] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:11:36.135] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:36.135] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:36.135] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:11:36.135] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:11:39.379] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:11:39.379] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:39.379] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:39.379] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:11:39.379] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:11:53.135] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:11:53.135] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:53.135] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:53.135] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:11:53.135] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:11:53.182] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:11:53.182] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:53.183] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:53.183] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:11:53.183] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:11:56.229] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:11:56.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:56.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:56.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:11:56.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:12:00.953] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:12:00.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:12:00.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:12:03.767] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:12:03.767] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:03.767] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:03.767] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:12:03.767] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:12:06.142] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:12:06.142] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:06.142] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:06.143] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:12:06.143] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:12:09.384] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:12:09.384] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:09.384] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:09.384] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:12:09.384] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:12:23.143] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:12:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:12:23.143] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:12:23.192] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:12:23.192] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:23.192] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:23.192] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:12:23.192] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:12:26.233] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:12:26.233] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:26.234] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:26.234] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:12:26.234] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:12:29.985] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:12:29.985] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:12:30.486] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 3ms
[00:12:30.486] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:12:30.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:12:30.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:12:30.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:12:30.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_6_
[00:12:30.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:12:30.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:30.956] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_6_
[00:12:33.777] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:12:33.777] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:33.778] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:33.778] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:12:33.778] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:12:36.150] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:12:36.150] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:36.151] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:36.151] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:12:36.151] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:12:39.391] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:12:39.392] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:39.392] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:39.392] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:12:39.392] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:12:53.151] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:12:53.151] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:53.152] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:53.152] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:12:53.152] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:12:53.200] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:12:53.200] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:53.201] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:53.201] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:12:53.201] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:12:56.239] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:12:56.239] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:56.239] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:56.239] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:12:56.239] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:13:00.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:13:00.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:13:00.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:13:03.787] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:13:03.787] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:03.787] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:03.787] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:13:03.787] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:13:06.158] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:13:06.158] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:06.158] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:06.158] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:13:06.158] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:13:09.398] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:13:09.398] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:09.398] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:09.398] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:13:09.398] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:13:23.157] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:13:23.157] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:23.157] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:23.157] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:13:23.157] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:13:23.210] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:13:23.210] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:23.210] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:23.210] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:13:23.210] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:13:26.247] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:13:26.247] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:26.247] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:26.247] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:13:26.247] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:13:30.488] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[00:13:30.488] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:13:30.963] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:13:30.963] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:13:30.963] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:13:33.792] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:13:33.792] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:33.792] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:33.792] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:13:33.792] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:13:36.164] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:13:36.164] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:36.164] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:36.164] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:13:36.164] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:13:39.405] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:13:39.405] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:39.405] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:39.405] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:13:39.405] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:13:53.164] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:13:53.164] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:53.164] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:53.164] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:13:53.164] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:13:53.218] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:13:53.218] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:53.218] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:53.218] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:13:53.219] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:13:56.250] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:13:56.250] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:56.250] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:56.250] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:13:56.250] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:14:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:14:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:14:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:14:03.802] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:14:03.802] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:03.802] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:03.802] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:14:03.802] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:14:06.171] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:14:06.171] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:06.172] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:06.172] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:14:06.172] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:14:09.412] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:14:09.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:09.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:09.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:14:09.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:14:23.170] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:14:23.170] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:23.170] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:23.170] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:14:23.170] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:14:23.226] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:14:23.227] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:23.227] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:23.227] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:14:23.227] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:14:26.256] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:14:26.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:26.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:26.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:14:26.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:14:30.490] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:14:30.490] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:14:30.972] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:14:30.972] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:14:30.972] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:14:33.809] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:14:33.810] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:33.810] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:33.810] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:14:33.810] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:14:36.179] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:14:36.179] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:36.180] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:36.180] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:14:36.180] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:14:39.417] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:14:39.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:39.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:39.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:14:39.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:14:53.176] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:14:53.176] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:53.176] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:53.176] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:14:53.176] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:14:53.236] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:14:53.236] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:53.236] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:53.236] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:14:53.236] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:14:56.259] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:14:56.259] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:56.259] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:56.259] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:14:56.260] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:15:00.974] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:15:00.974] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:15:00.974] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:15:03.819] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:15:03.819] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:03.819] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:03.819] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31001
[00:15:03.819] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:15:06.190] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:15:06.190] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:06.190] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:06.190] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:15:06.190] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:15:09.424] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:15:09.424] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:09.424] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:09.424] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:15:09.424] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:15:23.180] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:15:23.180] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:23.180] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:23.180] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:15:23.180] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:15:23.247] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31000, isReplication {}false
[00:15:23.247] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:23.247] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:23.247] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:ribbon-consumer:31000
[00:15:23.247] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000; reply status=200
[00:15:26.264] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:15:26.264] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:26.264] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:26.264] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:15:26.264] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:15:30.496] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms
[00:15:30.496] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:15:30.976] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:15:30.976] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:15:30.976] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:15:30.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_6_
[00:15:30.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:15:30.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:30.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_6_
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.d.u.DeserializerStringCache - clearing global-level cache with size 1
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.d.u.DeserializerStringCache - clearing app-level serialization cache with size 8
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ApplicationResource - Registering instance 192.168.31.38:ribbon-consumer:31001 (replication=null)
[00:15:31.217] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - register RIBBON-CONSUMER, vip ribbon-consumer, leaseDuration 90, isReplication false
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1606658550157, provided=1606666531212
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.DownOrStartingRule - Trusting the instance status DOWN from replica or instance for instance 192.168.31.38:ribbon-consumer:31001
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 JSON, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 XML, full
[00:15:31.217] DEBUG [http-nio-20000-exec-8]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 XML, full
[00:15:31.217] INFO  [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Registered instance RIBBON-CONSUMER/192.168.31.38:ribbon-consumer:31001 with status DOWN (replication=false)
[00:15:33.825] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew RIBBON-CONSUMER serverId 192.168.31.38:ribbon-consumer:31001, isReplication {}false
[00:15:33.825] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:33.825] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:33.825] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.DownOrStartingRule - Trusting the instance status DOWN from replica or instance for instance 192.168.31.38:ribbon-consumer:31001
[00:15:33.825] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001; reply status=200
[00:15:34.233] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - cancel RIBBON-CONSUMER, serverId 192.168.31.38:ribbon-consumer:31001, isReplication false
[00:15:34.234] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - cancel RIBBON-CONSUMER, serverId 192.168.31.38:ribbon-consumer:31001, isReplication false
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 JSON, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 XML, full
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 XML, full
[00:15:34.234] INFO  [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Cancelled instance RIBBON-CONSUMER/192.168.31.38:ribbon-consumer:31001 (replication=false)
[00:15:34.234] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Cancel): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31001
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.d.u.DeserializerStringCache - clearing global-level cache with size 1
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.d.u.DeserializerStringCache - clearing app-level serialization cache with size 8
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ApplicationResource - Registering instance 192.168.31.38:ribbon-consumer:31000 (replication=null)
[00:15:34.706] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - register RIBBON-CONSUMER, vip ribbon-consumer, leaseDuration 90, isReplication false
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1606658569852, provided=1606666534702
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.DownOrStartingRule - Trusting the instance status DOWN from replica or instance for instance 192.168.31.38:ribbon-consumer:31000
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, compact
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, compact
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 JSON, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, full
[00:15:34.706] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, compact
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, compact
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 XML, full
[00:15:34.707] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 XML, full
[00:15:34.707] INFO  [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Registered instance RIBBON-CONSUMER/192.168.31.38:ribbon-consumer:31000 with status DOWN (replication=false)
[00:15:36.195] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew EUREKA-CLIENT serverId 192.168.31.38:eureka-client:30002, isReplication {}false
[00:15:36.196] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:36.196] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:36.196] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:eureka-client:30002
[00:15:36.196] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002; reply status=200
[00:15:37.720] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - cancel RIBBON-CONSUMER, serverId 192.168.31.38:ribbon-consumer:31000, isReplication false
[00:15:37.720] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - cancel RIBBON-CONSUMER, serverId 192.168.31.38:ribbon-consumer:31000, isReplication false
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 JSON, compact
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 JSON, compact
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 JSON, full
[00:15:37.720] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V1 XML, compact
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V1 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V1 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application RIBBON-CONSUMER V2 XML, compact
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP ribbon-consumer V2 XML, full
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP ribbon-consumer V2 XML, full
[00:15:37.721] INFO  [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Cancelled instance RIBBON-CONSUMER/192.168.31.38:ribbon-consumer:31000 (replication=false)
[00:15:37.721] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Cancel): RIBBON-CONSUMER - 192.168.31.38:ribbon-consumer:31000
[00:15:38.220] DEBUG [http-nio-20000-exec-3]c.n.d.u.DeserializerStringCache - clearing global-level cache with size 1
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.d.u.DeserializerStringCache - clearing app-level serialization cache with size 8
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ApplicationResource - Registering instance 192.168.31.38:eureka-client:30002 (replication=null)
[00:15:38.221] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - register EUREKA-CLIENT, vip eureka-client, leaseDuration 90, isReplication false
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Existing lease found (existing=1606658553747, provided=1606666538217
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.DownOrStartingRule - Trusting the instance status DOWN from replica or instance for instance 192.168.31.38:eureka-client:30002
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 JSON, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V1 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V1 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 JSON, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V2 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V2 JSON, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 XML, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V1 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V1 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 XML, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V2 XML, full
[00:15:38.221] DEBUG [http-nio-20000-exec-3]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V2 XML, full
[00:15:38.221] INFO  [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Registered instance EUREKA-CLIENT/192.168.31.38:eureka-client:30002 with status DOWN (replication=false)
[00:15:39.428] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:15:39.428] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:39.428] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:39.428] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:15:39.428] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:15:41.231] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - cancel EUREKA-CLIENT, serverId 192.168.31.38:eureka-client:30002, isReplication false
[00:15:41.231] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - cancel EUREKA-CLIENT, serverId 192.168.31.38:eureka-client:30002, isReplication false
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 JSON, compact
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V1 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V1 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 JSON, compact
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V2 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V2 JSON, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 XML, full
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V1 XML, compact
[00:15:41.231] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V1 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V1 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application EUREKA-CLIENT V2 XML, compact
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP eureka-client V2 XML, full
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP eureka-client V2 XML, full
[00:15:41.232] INFO  [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Cancelled instance EUREKA-CLIENT/192.168.31.38:eureka-client:30002 (replication=false)
[00:15:41.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Cancel): EUREKA-CLIENT - 192.168.31.38:eureka-client:30002
[00:15:53.189] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:15:53.189] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:53.189] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:53.189] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:15:53.189] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:15:56.271] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:15:56.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:56.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:56.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:15:56.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 6
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.31.38:ribbon-consumer:31001 is found with status DOWN and actiontype DELETED
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.31.38:ribbon-consumer:31001 is found with status DOWN and actiontype DELETED
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.31.38:ribbon-consumer:31000 is found with status DOWN and actiontype DELETED
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.31.38:ribbon-consumer:31000 is found with status DOWN and actiontype DELETED
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.31.38:eureka-client:30002 is found with status DOWN and actiontype DELETED
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The instance id 192.168.31.38:eureka-client:30002 is found with status DOWN and actiontype DELETED
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_3_
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:16:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_3_
[00:16:09.436] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:16:09.436] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:16:09.436] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:16:09.436] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:16:09.436] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:16:23.197] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ITEM-SERVICE serverId 192.168.31.38:shop-cloud-item-service:10001, isReplication {}false
[00:16:23.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:16:23.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:16:23.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-item-service:10001
[00:16:23.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ITEM-SERVICE - 192.168.31.38:shop-cloud-item-service:10001; reply status=200
[00:16:26.276] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-USER-SERVICE serverId 192.168.31.38:shop-cloud-user-service:10002, isReplication {}false
[00:16:26.276] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:16:26.276] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:16:26.276] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-user-service:10002
[00:16:26.276] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-USER-SERVICE - 192.168.31.38:shop-cloud-user-service:10002; reply status=200
[00:16:30.501] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 3ms
[00:16:30.501] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:16:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:16:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:16:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:16:39.442] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew SHOP-CLOUD-ORDER-SERVICE serverId 192.168.31.38:shop-cloud-order-service:10003, isReplication {}false
[00:16:39.442] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:16:39.442] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:16:39.442] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance 192.168.31.38:shop-cloud-order-service:10003
[00:16:39.442] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): SHOP-CLOUD-ORDER-SERVICE - 192.168.31.38:shop-cloud-order-service:10003; reply status=200
[00:16:40.254] DEBUG [Thread-13]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@551aa95a, started on Sun Nov 29 22:02:24 CST 2020, parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7e0babb1
[00:16:40.254] INFO  [Thread-13]o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application EUREKA-SERVER with eureka with status DOWN
[00:16:40.256] DEBUG [Thread-13]o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 0
[00:16:40.257] DEBUG [Thread-13]o.s.c.s.DefaultLifecycleProcessor - Bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration' completed its stop procedure
[00:16:40.257] INFO  [Thread-13]c.n.e.DefaultEurekaServerContext - Shutting down ...
[00:16:40.259] INFO  [Thread-13]c.n.e.DefaultEurekaServerContext - Shut down
[00:16:40.261] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Archaius' from the JMX domain
[00:16:40.261] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Auditevents' from the JMX domain
[00:16:40.261] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Beans' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Caches' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Health' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Conditions' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Configprops' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Env' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Info' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Loggers' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Threaddump' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Metrics' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Scheduledtasks' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Httptrace' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Mappings' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Refresh' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Features' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.b.a.e.j.JmxEndpointExporter - Unregister endpoint with ObjectName 'org.springframework.boot:type=Endpoint,name=Service-registry' from the JMX domain
[00:16:40.262] DEBUG [Thread-13]o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
[00:16:40.262] DEBUG [Thread-13]o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
[00:16:40.263] INFO  [Thread-13]o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
[00:16:40.269] INFO  [Thread-13]c.n.d.DiscoveryClient - Shutting down DiscoveryClient ...
[00:16:40.270] INFO  [Thread-13]c.n.d.DiscoveryClient - Completed shut down of DiscoveryClient
